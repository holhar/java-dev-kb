package de.holhar.java_dev_kb.training.concurrency.ch06_task_execution.s6_3_exploitable_parallelism.s6_3_5_completion_service_executor_meets_blocking_queue;

import java.util.concurrent.BlockingDeque;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

/**
 * QueueingFuture class used by ExecutorCompletionService (shown here for illustration).
 */
public class QueueingFuture<V> extends FutureTask<V> {

  BlockingQueue<QueueingFuture> completionQueue;

  // more stuff ...

  public QueueingFuture(Callable<V> c) {
    super(c);
  }

  public QueueingFuture(Runnable runnable, V result) {
    super(runnable, result);
  }


  protected void done() {
    completionQueue.add(this);
  }

  // more stuff ...
}
