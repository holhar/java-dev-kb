package de.holhar.java_dev_kb.training.concurrency.ch06_task_execution.s6_3_exploitable_parallelism.s6_3_2_result_bearing_tasks_callable_and_future;

import java.util.concurrent.CancellationException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;

/**
 * Future interface (shown here for illustration).
 */
public interface FutureInterface<V> {
  boolean cancel(boolean mayInterruptIfRunning);
  boolean isCancelled();
  boolean isDone();
  V get() throws InterruptedException, ExecutionException, CancellationException;
  V get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException,
      CancellationException, TimeoutException;
}
